{"version":3,"sources":["components/pages/SingleCharacterLayout.js","components/errorMassage/error.gif","components/errorMassage/errorMassage.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator/index.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","service/MarvelService.js","hooks/http.hook.js","../node_modules/regenerator-runtime/runtime.js"],"names":["View","names","name","description","thumbnail","className","src","alt","to","SingleCharacterLayout","comicId","useParams","useState","setNames","useMarvelService","loading","error","getCharacters","clearError","useEffect","updateName","then","onComicLoaded","errorMassage","spinner","content","ErrorMassage","style","display","width","height","objectFit","margin","img","module","exports","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","done","Promise","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined","setLoading","setError","request","useCallback","url","a","method","body","headers","fetch","response","ok","Error","status","json","data","message","useHttp","_APIBASE","_APIKEY","getAllCharacters","offset","res","results","map","_transformCharacter","id","getAllComics","_transformComics","getComics","getCharacterByName","console","log","char","slice","path","extension","homepage","urls","wiki","comics","items","title","price","prices","language","textObjects","runtime","Op","Object","prototype","hasOwn","hasOwnProperty","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","obj","defineProperty","enumerable","configurable","writable","wrap","innerFn","outerFn","tryLocsList","protoGenerator","Generator","generator","create","context","Context","_invoke","state","GenStateSuspendedStart","GenStateExecuting","GenStateCompleted","doneResult","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","abrupt","record","tryCatch","type","GenStateSuspendedYield","makeInvokeMethod","call","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","AsyncIterator","PromiseImpl","invoke","result","__await","unwrapped","previousPromise","callInvokeWithMethodAndArg","TypeError","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","displayName","isGeneratorFunction","genFun","ctor","constructor","mark","setPrototypeOf","__proto__","awrap","async","iter","keys","object","reverse","pop","skipTempReset","prev","charAt","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","thrown","delegateYield","regeneratorRuntime","accidentalStrictMode","globalThis","Function"],"mappings":"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","file":"static/js/6.63d0265d.chunk.js","sourcesContent":["import { useState, useEffect } from 'react';\r\nimport { useParams, Link } from 'react-router-dom';\r\nimport useMarvelService from '../../service/MarvelService';\r\nimport Spinner from '../spinner/Spinner';\r\nimport ErrorMassage from '../errorMassage/errorMassage';\r\n\r\nimport './singleCharacterLayout.scss';\r\n\r\nconst SingleCharacterLayout = () => {\r\n\r\n    const {comicId} = useParams();\r\n    const [names, setNames] = useState(null);\r\n    const {loading,error,getCharacters, clearError} = useMarvelService();\r\n\r\n    useEffect(()=> {\r\n        updateName();\r\n     }, [comicId])\r\n\r\n     const updateName = () => {\r\n        clearError();\r\n        getCharacters(comicId).then(onComicLoaded)\r\n    }\r\n\r\n    const onComicLoaded = names => {\r\n        setNames(names);\r\n    }\r\n\r\n    const errorMassage = error ? <ErrorMassage/> : null;\r\n    const spinner = loading ? <Spinner/> : null;\r\n    const content = !(loading || error || !names) ? <View names = {names}/>: null;\r\n\r\n    return (\r\n        <>\r\n            {errorMassage}\r\n            {spinner}\r\n            {content}\r\n        </>\r\n    )\r\n}\r\n\r\nconst View = ({names}) => {\r\n    const {name, description, thumbnail} = names;\r\n    return (\r\n        <div className=\"single-comic\">\r\n            <img src={thumbnail} alt={name} className=\"single-comic__char-img\"/>\r\n            <div className=\"single-comic__info\">\r\n                <h2 className=\"single-comic__name\">{name}</h2>\r\n                <p className=\"single-comic__descr\">{description}</p>\r\n            </div>\r\n        <Link to=\"/\" className=\"single-comic__back\">Back to all</Link>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default SingleCharacterLayout;","export default __webpack_public_path__ + \"static/media/error.42292aa1.gif\";","import img from './error.gif'\r\n\r\nconst ErrorMassage = () => {\r\n    return (\r\n        <img style = {{ display:'block', width: '250px', height: '250px',\r\n        objectFit:'contain', margin: '0, auto' }} src= {img} alt = \"Error\"/>\r\n    )\r\n}\r\n\r\nexport default ErrorMassage;","module.exports = require(\"regenerator-runtime\");\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","import { useHttp } from \"../hooks/http.hook\";\r\n\r\n const useMarvelService = () =>  {\r\n    const {loading, request, error, clearError} = useHttp();\r\n\r\n    const _APIBASE = 'https://gateway.marvel.com:443/v1/public/';\r\n    const _APIKEY = 'apikey=0f0b4c1cdd02b439fd1a6a3ba7c07876';\r\n    const _BASEOFFSET = 210;\r\n\r\n    const getAllCharacters = async (offset = _BASEOFFSET) => {\r\n        const res = await request(`${_APIBASE}characters?limit=9&offset=${offset}&${_APIKEY}`);\r\n        return res.data.results.map(_transformCharacter);\r\n    }\r\n\r\n    const getCharacters = async (id) => {\r\n        const res =  await  request(`${_APIBASE}characters/${id}?&${_APIKEY}`);\r\n        return _transformCharacter(res.data.results[0]);\r\n    }\r\n\r\n    const getAllComics = async (offset = 0) => {\r\n        const res = await request(`${_APIBASE}comics?orderBy=issueNumber&limit=8&offset=${offset}&${_APIKEY}`);\r\n        return res.data.results.map(_transformComics);\r\n    }\r\n\r\n    const getComics = async (id) => {\r\n        const res = await request(`${_APIBASE}comics/${id}?${_APIKEY}`);\r\n        return _transformComics(res.data.results[0]);\r\n    }\r\n\r\n    const getCharacterByName = async (name) => {\r\n        const res = await request(`${_APIBASE}characters?name=${name}&${_APIKEY}`);\r\n        console.log(name)\r\n        return res.data.results.map(_transformCharacter);\r\n    }\r\n    \r\n    const  _transformCharacter = (char) => {\r\n        return {\r\n            id: char.id,\r\n            name: char.name,\r\n            description: char.description ? `${char.description.slice(0, 210)}...` : 'There is no description for this character',\r\n            thumbnail: char.thumbnail.path + '.' + char.thumbnail.extension,\r\n            homepage: char.urls[0].url,\r\n            wiki: char.urls[0].url,\r\n            comics: char.comics.items\r\n        }\r\n    }\r\n    const  _transformComics = (comics) => {\r\n        return {\r\n            id: comics.id,\r\n            title: comics.title,\r\n            thumbnail: comics.thumbnail.path + '.' + comics.thumbnail.extension,\r\n            price: comics.prices[0].price ? `${comics.prices[0].price}$` : 'not available',\r\n            description: comics.description || 'There is no description for this character',\r\n            language: comics.textObjects.language || 'en-us',\r\n\r\n        }\r\n    }\r\n\r\n    return {loading, error, clearError, getAllCharacters, getCharacters,getComics,getAllComics,getCharacterByName};\r\n}\r\nexport default useMarvelService;","import { useState, useCallback } from \"react\";\r\n\r\nexport const useHttp = () => {\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState(null);\r\n\r\n    const request = useCallback(async (url, method = 'GET', body = null, headers = {'Content-Type': 'application/json'}) => {\r\n\r\n        setLoading(true);\r\n\r\n        try {\r\n            const response = await fetch(url, {method, body, headers});\r\n            if (!response.ok) {\r\n                throw new Error (`Could not fetch ${url}, status: ${response.status}`);\r\n            }\r\n            const data = await response.json();\r\n            setLoading(false);\r\n            return data;\r\n\r\n        } catch (error) {\r\n            setLoading(false);\r\n            setError(error.message);\r\n            throw error;\r\n        }\r\n\r\n    }, []);\r\n\r\n    const clearError = useCallback( () => setError(null), [])\r\n\r\n    return {loading, request, error, clearError}\r\n\r\n}\r\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  define(IteratorPrototype, iteratorSymbol, function () {\n    return this;\n  });\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = GeneratorFunctionPrototype;\n  define(Gp, \"constructor\", GeneratorFunctionPrototype);\n  define(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction);\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  define(AsyncIterator.prototype, asyncIteratorSymbol, function () {\n    return this;\n  });\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  define(Gp, iteratorSymbol, function() {\n    return this;\n  });\n\n  define(Gp, \"toString\", function() {\n    return \"[object Generator]\";\n  });\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, in modern engines\n  // we can explicitly access globalThis. In older engines we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  if (typeof globalThis === \"object\") {\n    globalThis.regeneratorRuntime = runtime;\n  } else {\n    Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n  }\n}\n"],"sourceRoot":""}